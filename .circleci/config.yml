version: 2.1

orbs:
  android: circleci/android@1.0.3
  flutter: circleci/flutter@2.0.0

commands:
  custom_install_sdk:
    description: |
     Install Flutter SDK and Fastlane without doctor
    parameters:
      install-location:
        default: ~/usr/development
        description: Install path for the Flutter and Fastlane binaries.
        type: string
      version:
        default: 3.16.0
        description: The target version for the Flutter SDK.
        type: string
    steps:
      # - restore_cache:
      #     keys:
      #       - flutter-<<parameters.version>>-{{ arch }}
      - run:
          name: Install Fastlane
          command: |
            gem install fastlane -NV

      - run:
          command: |+
            #!/usr/bin/env bash

            INSTALL_LOCATION=$(eval "echo $ORB_EVAL_INSTALL_LOCATION")

            if [ ! -d "$INSTALL_LOCATION/flutter" ]; then
              mkdir -p "$INSTALL_LOCATION"
              if [ "$(uname)" == 'Darwin' ]; then
                curl -o flutter_sdk.zip https://storage.googleapis.com/flutter_infra_release/releases/stable/macos/flutter_macos_$ORB_VAL_FLUTTER_SDK_VERSION-stable.zip
                unzip -qq flutter_sdk.zip -d "$INSTALL_LOCATION"
                rm flutter_sdk.zip
              elif uname -a | grep -q "Linux" ; then
                curl -o flutter_sdk.tar.xz https://storage.googleapis.com/flutter_infra_release/releases/stable/linux/flutter_linux_$ORB_VAL_FLUTTER_SDK_VERSION-stable.tar.xz
                tar xf flutter_sdk.tar.xz -C "$INSTALL_LOCATION"
                rm -f flutter_sdk.tar.xz
              else
                echo "This platform ($(uname -a)) is not supported."
                exit 1
              fi
            fi

            echo "export PATH=$INSTALL_LOCATION/flutter/bin:\$PATH" >> "$BASH_ENV"

            # shellcheck source=/dev/null
            source "$BASH_ENV"
            which flutter

          environment:
            ORB_EVAL_INSTALL_LOCATION: <<parameters.install-location>>
            ORB_VAL_FLUTTER_SDK_VERSION: <<parameters.version>>
          name: Install Flutter SDK if it does not exists
      # - save_cache:
      #     key: flutter-<<parameters.version>>-{{ arch }}
      #     paths:
      #       - <<parameters.install-location>>


jobs:
  build_android:
    executor:
      name: android/android-machine
      resource-class: medium
    
    steps:
      - checkout

      - custom_install_sdk: 
          version: 3.16.0

      - flutter/install_pub:
          cache-version: v1

      - run:
          name: Flutter pub get
          command: |
            flutter pub get

      - run:
          name: Build APK
          command: |
            flutter build apk

      - store_artifacts:
          path: build/app/outputs/flutter-apk/app-release.apk
          
  build_ios:
    macos:
      xcode: 15.0.0

    steps:
      - checkout

      - run: xcodebuild -version

      - custom_install_sdk: 
          version: 3.16.0

      - flutter/install_pub:
          cache-version: v1

      - run:
          name: Flutter pub get
          command: |
            flutter pub get
      - run:
          name: Ruby version
          command: ruby -v

      # - run:
      #     name: Set Development Team
      #     command: cd ios && fastlane ios set_development_team  

      - run:
          name: Build IOS with Fastlane
          command: |
           cd ios && fastlane ios beta
      - run:
          name: logs
          command: |
           nano /Users/distiller/Library/Logs/gym/Runner-Runner.log
      
      - store_artifacts:
          path: build/ios/Runner/build/Release-iphoneos/Runner.app
          
  install_fastlane:
    macos:
      xcode: 15.0.0

    steps:
      - checkout

      - run:
          name: Install Fastlane
          command: |
            gem install bundler -v '< 3' && bundle install
            fastlane install_plugins



workflows:
  version: 2
  build_android_ios:
    jobs:
      # - build_ios
      # - build_android